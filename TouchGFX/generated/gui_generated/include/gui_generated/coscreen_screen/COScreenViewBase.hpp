/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef COSCREENVIEWBASE_HPP
#define COSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/coscreen_screen/COScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/Gauge.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class COScreenViewBase : public touchgfx::View<COScreenPresenter>
{
public:
    COScreenViewBase();
    virtual ~COScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::TextAreaWithOneWildcard COData;
    touchgfx::ButtonWithIcon back;
    touchgfx::Gauge COGauge;
    touchgfx::TextArea CO_text;

    /*
     * Wildcard Buffers
     */
    static const uint16_t CODATA_SIZE = 4;
    touchgfx::Unicode::UnicodeChar CODataBuffer[CODATA_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<COScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // COSCREENVIEWBASE_HPP
