/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef PRESSURESCREENVIEWBASE_HPP
#define PRESSURESCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/pressurescreen_screen/PressureScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/Gauge.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class PressureScreenViewBase : public touchgfx::View<PressureScreenPresenter>
{
public:
    PressureScreenViewBase();
    virtual ~PressureScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ButtonWithIcon back;
    touchgfx::Gauge PressureGauge;
    touchgfx::TextArea Pressure_text;
    touchgfx::TextAreaWithOneWildcard PressureData;

    /*
     * Wildcard Buffers
     */
    static const uint16_t PRESSUREDATA_SIZE = 5;
    touchgfx::Unicode::UnicodeChar PressureDataBuffer[PRESSUREDATA_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<PressureScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // PRESSURESCREENVIEWBASE_HPP
