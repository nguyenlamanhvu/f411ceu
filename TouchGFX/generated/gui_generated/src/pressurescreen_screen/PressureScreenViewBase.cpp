/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/pressurescreen_screen/PressureScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

PressureScreenViewBase::PressureScreenViewBase() :
    buttonCallback(this, &PressureScreenViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    back.setXY(20, 103);
    back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
    back.setIconXY(5, 5);
    back.setAction(buttonCallback);
    add(back);

    PressureGauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_BACKGROUNDS_LIGHT_ID));
    PressureGauge.setPosition(166, 73, 120, 120);
    PressureGauge.setCenter(60, 60);
    PressureGauge.setStartEndAngle(-90, 90);
    PressureGauge.setRange(300, 1100);
    PressureGauge.setValue(500);
    PressureGauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_NEEDLES_ROUGH_ID, 5, 33);
    PressureGauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    PressureGauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    add(PressureGauge);

    Pressure_text.setXY(74, 10);
    Pressure_text.setColor(touchgfx::Color::getColorFromRGB(242, 174, 174));
    Pressure_text.setLinespacing(0);
    Pressure_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NHFJ));
    add(Pressure_text);

    PressureData.setXY(200, 202);
    PressureData.setColor(touchgfx::Color::getColorFromRGB(214, 195, 195));
    PressureData.setLinespacing(0);
    Unicode::snprintf(PressureDataBuffer, PRESSUREDATA_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_6W6Z).getText());
    PressureData.setWildcard(PressureDataBuffer);
    PressureData.resizeToCurrentText();
    PressureData.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9SKU));
    add(PressureData);
}

PressureScreenViewBase::~PressureScreenViewBase()
{

}

void PressureScreenViewBase::setupScreen()
{

}

void PressureScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &back)
    {
        //PressureToMain
        //When back clicked change screen to MainScreen
        //Go to MainScreen with screen transition towards West
        application().gotoMainScreenScreenSlideTransitionWest();
    }
}
