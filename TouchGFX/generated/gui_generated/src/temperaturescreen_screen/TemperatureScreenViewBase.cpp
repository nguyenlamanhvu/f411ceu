/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/temperaturescreen_screen/TemperatureScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

TemperatureScreenViewBase::TemperatureScreenViewBase() :
    buttonCallback(this, &TemperatureScreenViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    TemperatureData.setXY(207, 202);
    TemperatureData.setColor(touchgfx::Color::getColorFromRGB(214, 195, 195));
    TemperatureData.setLinespacing(0);
    Unicode::snprintf(TemperatureDataBuffer, TEMPERATUREDATA_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9SEE).getText());
    TemperatureData.setWildcard(TemperatureDataBuffer);
    TemperatureData.resizeToCurrentText();
    TemperatureData.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GYIK));
    add(TemperatureData);

    Temperature_text.setXY(39, 10);
    Temperature_text.setColor(touchgfx::Color::getColorFromRGB(242, 174, 174));
    Temperature_text.setLinespacing(0);
    Temperature_text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OJUT));
    add(Temperature_text);

    TemperatureGauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_BACKGROUNDS_LIGHT_ID));
    TemperatureGauge.setPosition(166, 73, 120, 120);
    TemperatureGauge.setCenter(60, 60);
    TemperatureGauge.setStartEndAngle(-90, 90);
    TemperatureGauge.setRange(0, 120);
    TemperatureGauge.setValue(20);
    TemperatureGauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_TINY_NEEDLES_ROUGH_ID, 5, 33);
    TemperatureGauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    TemperatureGauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    add(TemperatureGauge);

    back.setXY(20, 103);
    back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
    back.setIconXY(5, 5);
    back.setAction(buttonCallback);
    add(back);
}

TemperatureScreenViewBase::~TemperatureScreenViewBase()
{

}

void TemperatureScreenViewBase::setupScreen()
{

}

void TemperatureScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &back)
    {
        //TemperatureToMain
        //When back clicked change screen to MainScreen
        //Go to MainScreen with screen transition towards West
        application().gotoMainScreenScreenSlideTransitionWest();
    }
}
